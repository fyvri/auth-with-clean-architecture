version: "3.8"
services:
  mysql:
    container_name: ${DOCKERHUB_REPOSITORY}-mysql
    image: mysql:8.0
    command: |
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --sql_mode=IGNORE_SPACE,NO_ENGINE_SUBSTITUTION
      --lower_case_table_names=2
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: "mysql ${MYSQL_DATABASE} -u${MYSQL_USERNAME} -p${MYSQL_PASSWORD} -e 'SELECT 1;'"
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 60
    volumes:
      - volume:/var/lib/mysql
      - ../docs:/docker-entrypoint-initdb.d
    networks:
      - network
  go:
    container_name: ${DOCKERHUB_REPOSITORY}-go
    image: ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPOSITORY}:${TAG_VERSION}
    # restart: always
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    ports:
      - ${PORT}:8080
    environment:
      - DB_HOST=${DOCKERHUB_REPOSITORY}-mysql
      - DB_PORT=3306
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
      - JWT_KEY=${JWT_KEY}
    networks:
      - network
    depends_on:
      - mysql
volumes:
  volume:
    name: ${DOCKERHUB_REPOSITORY}
    driver: local
networks:
  network:
    name: ${DOCKERHUB_REPOSITORY}
    driver: bridge
