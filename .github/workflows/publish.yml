name: Publish Version

on:
  release:
    types:
      - published

jobs:
  publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Init tag version name
        run: |
          echo "TAG_VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')" >> $GITHUB_ENV

      - name: Build and push docker image by stable version
        run: |
          docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ env.TAG_VERSION }}
          docker tag ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ env.TAG_VERSION }} ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:stable
          docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:stable

  # deploy:
  #   name: Deploy to VPS
  #   runs-on: ubuntu-latest
  #   needs: [publish]
  #   steps:
  #     - name: Deploy to VPS
  #       uses: appleboy/ssh-action@v0.1.4
  #       with:
  #         host: ${{ vars.SSH_HOST }}
  #         port: ${{ vars.SSH_PORT }}
  #         username: ${{ vars.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         # key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           docker stop ${{ vars.DOCKERHUB_REPOSITORY }}-go || true
  #           docker rm ${{ vars.DOCKERHUB_REPOSITORY }}-go || true
  #           docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:stable
  #           docker run -d \
  #             --name ${{ vars.DOCKERHUB_REPOSITORY }}-go \
  #             -e DB_HOST=${{ vars.DOCKERHUB_REPOSITORY }}-mysql \
  #             -e DB_PORT=3306 \
  #             -e DB_USERNAME=${{ vars.MYSQL_USERNAME }} \
  #             -e DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
  #             -e DB_DATABASE=${{ vars.MYSQL_DATABASE }} \
  #             -e JWT_KEY=${{ secrets.JWT_SECRET_KEY }} \
  #             -p ${{ vars.PORT }}:8080 \
  #             --network=${{ vars.DOCKERHUB_REPOSITORY }} \
  #             ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:stable
